---
to: 'package.json'
strategy: merge
---
<%
let developmentDependencies = getDependencies([
  '@jest/globals',
], workspace);
let packageJson = lodash.merge(
  {
    repository: {
      type: 'git',
      directory: project.relativePath,
    },
    type: 'module',
    exports: './dist/main.js',
    files: ['dist', 'src'],
    scripts: {
      build: 'del-cli dist tsconfig.tsbuildinfo && swc src -d dist && tsc',
      clean: 'del-cli coverage dist *.tsbuildinfo',
      document: 'del-cli docs && typedoc --options typedoc.config.cjs',
      format:
        'prettier . --write --ignore-unknown --ignore-path ../../.prettierignore',
      lint: 'eslint .',
      test: 'del-cli coverage && cross-env NODE_OPTIONS=--experimental-vm-modules jest --passWithNoTests',
      typecheck: 'tsc --project tsconfig.typecheck.json',
    },
    devDependencies: developmentDependencies,
    packageManager: 'npm@10.1.0',
    engines: {
      node: '^20.8.0',
    },
  },
  project.config.overrides?.packageJson ?? {},
);
-%>
<%- JSON.stringify(packageJson) %>
