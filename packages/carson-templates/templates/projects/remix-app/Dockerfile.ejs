---
to: 'Dockerfile'
strategy: overwrite
---
<%
let lines = [];

for (let project of workspace.projects) {
  lines.push(`COPY --chown=nodeuser ${project.relativePath} ${project.relativePath}`);
}
-%>
#
# DO NOT EDIT!
# This file was autogenerated by Carson.
# Changes may cause incorrect behavior and will be lost when the file is regenerated.
#
# Run `npx carson update workspace` to regenerate.
#

FROM node:20-alpine

# Create a new user and change directory ownership
RUN adduser --disabled-password  --home /app  --uid 12000  --gecos '' nodeuser
RUN chown -R nodeuser /app
USER nodeuser

WORKDIR /app

# Copy files
# We need to copy files needed for installing dependencies, app, and its direct and indirect dependencies that are located in the same workspace
COPY --chown=nodeuser package.json package.json
COPY --chown=nodeuser package-lock.json package-lock.json
<%- lines.join('\n') %>

# Install dependencies
RUN npm ci --ignore-scripts

# Add stuff to process.env
ENV IS_DOCKER=true
ENV TZ=Europe/Prague
ENV NODE_ENV=production
ENV NODE_OPTIONS=--enable-source-maps

WORKDIR /app/<%- project.relativePath %>

EXPOSE 5000
ENTRYPOINT ["npm", "start"]
