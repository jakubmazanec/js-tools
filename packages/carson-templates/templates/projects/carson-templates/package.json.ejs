---
to: 'package.json'
strategy: merge
---
<%
let developmentDependencies = getDependencies(
  [
    '@jest/globals',
    '@swc/cli',
    '@swc/core',
    '@types/node',
    'cross-env',
    'del-cli',
    'eslint',
    'jest',
    'prettier',
    'prettier-plugin-packagejson',
    'ts-jest',
    'typedoc',
    'typedoc-plugin-markdown',
    'typescript',
  ],
  workspace,
);
let packageJson = {
  repository: {
    type: 'git',
    directory: project.relativePath,
  },
  type: 'module',
  exports: {
    '.': './dist/main.js',
    './package.json': './package.json',
  },
  files: ['dist', 'src', 'templates'],
  scripts: {
    build: 'del-cli dist tsconfig.tsbuildinfo && swc src -d dist && tsc',
    clean: 'del-cli coverage dist *.tsbuildinfo',
    document: 'del-cli docs && typedoc --options typedoc.config.cjs',
      format: FORMAT_COMMAND,
    lint: 'eslint .',
    test: 'del-cli coverage && cross-env NODE_OPTIONS=--experimental-vm-modules jest --passWithNoTests',
    typecheck: 'tsc --project tsconfig.typecheck.json',
  },
  devDependencies: developmentDependencies,
  packageManager: 'npm@10.1.0',
  engines: {
    node: '^20.8.0',
  },
};
-%>
<%- JSON.stringify(packageJson) %>
