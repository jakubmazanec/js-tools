---
to: 'package.json'
strategy: merge
---
<%
let developmentDependencies = getDependencies(
  [
    '@types/node',
    '@vitest/coverage-v8',
    'del-cli',
    'esbuild',
    'eslint',
    'prettier',
    'prettier-plugin-packagejson',
    'typescript',
    'vitest',
  ],
  workspace,
);
let packageJson = lodash.merge(
  {
    repository: {
      type: 'git',
      directory: project.relativePath,
    },
    type: 'commonjs',
    exports: `./${BUILD_DIRECTORY}/main.js`,
    files: [BUILD_DIRECTORY, 'src'],
    scripts: {
      build: `del-cli ${BUILD_DIRECTORY} tsconfig.tsbuildinfo && ${BUILD_TO_CJS_COMMAND} && tsc`,
      clean: `del-cli coverage ${BUILD_DIRECTORY} *.tsbuildinfo`,
      format: FORMAT_COMMAND,
      lint: 'eslint .',
      test: `del-cli coverage && ${TEST_COMMAND}`,
      typecheck: 'tsc --project tsconfig.typecheck.json',
    },
    devDependencies: developmentDependencies,
    packageManager: 'npm@10.1.0',
    engines: {
      node: '^20.8.0',
    },
  },
  project.config.overrides?.packageJson ?? {},
);
-%>
<%- JSON.stringify(packageJson) %>
