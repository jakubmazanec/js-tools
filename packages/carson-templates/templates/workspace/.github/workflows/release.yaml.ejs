---
to: '.github/workflows/release.yaml'
strategy: overwrite
---
#
# DO NOT EDIT!
# This file was autogenerated by Carson.
# Changes may cause incorrect behavior and will be lost when the file is regenerated.
#
# Run `npx carson update workspace` to regenerate.
#

name: Release

on: [push, workflow_dispatch]

jobs:
  release_main_branch:
    name: Main branch release
    if: ${{ github.ref_name == '<%- getMainBranch(workspace) %>' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          token: ${{secrets.PAT}}
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.email "bot@mazanec.dev"
          git config user.name "Bot"

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install packages
        run: npm ci

      - name: Check for changes
        run: |
          git config core.filemode false
          git_status=$(git status --porcelain)

          if [[ -n $git_status ]]; then
            echo "You have uncommitted changes!"
            git diff
            git config --unset core.filemode
            exit 1
          fi

          git config --unset core.filemode

      - name: Run tests
        run: npm test

      - name: Check for changes
        run: |
          git config core.filemode false
          git_status=$(git status --porcelain)

          if [[ -n $git_status ]]; then
            echo "You have uncommitted changes!"
            git diff
            git config --unset core.filemode
            exit 1
          fi

          git config --unset core.filemode

      - name: Build packages
        run: npm run build

      - name: Authenticate to npm registry
        run: |
          echo "//registry.npmjs.com/:_authToken=NPM_TOKEN" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Version packages
        run: |
          npx changeset version
          git status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit changes
        run: |
          git add -A
          git reset .npmrc
          git status
          git commit -m"Release [skip actions]"

      - name: Publish packages
        run: |
          npx changeset publish --no-git-tag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: 'true' # must be string, not boolean

      - name: Update lockfile
        run: |
          npm install
          git add package-lock.json
          git status
          git commit --amend --no-edit

      - name: Add git tags
        run: |
          npx changeset tag

      - name: Push changes
        run: |
          git push --follow-tags

<%
for (let project of workspace.projects) {
  if (project.config.deployment?.appName) {
-%>
      - name: Deploy
        run:
          npm run deploy --workspace <%- project.name %>
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
<%
  }
}
%>

      - name: Checkout main branch
        run: |
          git fetch -p origin
          git checkout <%- getMainBranch(workspace) %>
          git branch --set-upstream-to=origin/<%- getMainBranch(workspace) %> <%- getMainBranch(workspace) %>
          git reset --hard origin/<%- getMainBranch(workspace) %>
          git pull

      - name: Checkout development branch
        run: |
          git checkout -B <%- getDevelopmentBranch(workspace) %>
          git branch --set-upstream-to=origin/<%- getDevelopmentBranch(workspace) %> <%- getDevelopmentBranch(workspace) %>
          git reset --hard origin/<%- getDevelopmentBranch(workspace) %>

      - name: Merge and commit
        run: |
          git merge <%- getMainBranch(workspace) %> --no-verify
          git push -u origin <%- getDevelopmentBranch(workspace) %> --no-verify

  release_development_branch:
    name: Development branch release
    if: ${{ github.ref_name == '<%- getDevelopmentBranch(workspace) %>' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.email "bot@mazanec.dev"
          git config user.name "Bot"

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install packages
        run: npm ci

      - name: Check for changes
        run: |
          git config core.filemode false
          git_status=$(git status --porcelain)

          if [[ -n $git_status ]]; then
            echo "You have uncommitted changes!"
            git diff
            git config --unset core.filemode
            exit 1
          fi

          git config --unset core.filemode

      - name: Run tests
        run: npm test

      - name: Check for changes
        run: |
          git config core.filemode false
          git_status=$(git status --porcelain)

          if [[ -n $git_status ]]; then
            echo "You have uncommitted changes!"
            git diff
            git config --unset core.filemode
            exit 1
          fi

          git config --unset core.filemode

      - name: Build packages
        run: npm run build

      - name: Update documentation
        run: |
          npm run document --if-present
          npm run format --if-present
          git add **/docs/**
          git status
          git commit -m"Update docs [skip actions]"
          git push --force
        continue-on-error: true

      - name: Authenticate to npm registry
        run: |
          echo "//registry.npmjs.com/:_authToken=NPM_TOKEN" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Version packages
        run: |
          npx changeset version --snapshot next --snapshot-prerelease-template "{tag}.{commit}"
          git status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish packages
        run: |
          npx changeset publish --tag next --no-git-tag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: 'true' # must be string, not boolean

<%
for (let project of workspace.projects) {
  if (project.config.deployment?.appName) {
-%>
      - name: Deploy
        run:
          npm run deploy --workspace <%- project.name %> -- --app <%- project.config.deployment?.appName %>-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
<%
  }
}
%>

  release_feature_branch:
    name: Feature branch release
    if: ${{ github.ref_name != '<%- getMainBranch(workspace) %>' && github.ref_name != '<%- getDevelopmentBranch(workspace) %>' && github.actor != 'renovate[bot]' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.email "bot@mazanec.dev"
          git config user.name "Bot"

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install packages
        run: npm ci

      - name: Check for changes
        run: |
          git config core.filemode false
          git_status=$(git status --porcelain)

          if [[ -n $git_status ]]; then
            echo "You have uncommitted changes!"
            git diff
            git config --unset core.filemode
            exit 1
          fi

          git config --unset core.filemode

      - name: Run tests
        run: npm test

      - name: Check for changes
        run: |
          git config core.filemode false
          git_status=$(git status --porcelain)

          if [[ -n $git_status ]]; then
            echo "You have uncommitted changes!"
            git diff
            git config --unset core.filemode
            exit 1
          fi

          git config --unset core.filemode

      - name: Build packages
        run: npm run build

      - name: Check for changesets
        run: npx changeset status --since=origin/<%- getDevelopmentBranch(workspace) %>

      - name: Authenticate to npm registry
        run: |
          echo "//registry.npmjs.com/:_authToken=NPM_TOKEN" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Version packages
        run: |
          npx changeset version --snapshot unstable --snapshot-prerelease-template "{tag}.{commit}"
          git status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish packages
        run: |
          npx changeset publish --tag unstable --no-git-tag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: 'true' # must be string, not boolean
